#!/bin/bash

#    TeleGramBot - telegram-cli wrapper bot
#    Copyright (C) 2015 Umberto Reale
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

### VARS ###
BOTNICK=""
RUNNER="$USER"
SCRIPTNAME=$(basename "$0") 
LCK="/tmp/$RUNNER.$SCRIPTNAME.lck"
OLDPID="/tmp/TeleGramBot.oldpid"
BUFFER="/tmp/$SCRIPTNAME.buffer"
ADMIN=""
TELEG_OUT="/tmp/$SCRIPTNAME_tgb.buffer"
SOURCE="https://github.com/umby213/TB"
VERS="0.0.1beta"
DEBUG="0"

if [[ "$1" == "--stop" ]]; then 
	rm "$TELEG_OUT" 2> /dev/null
	rm "$OLDPID" 2> /dev/null
	rm "$LCK" 2> /dev/null 
	killall "$SCRIPTNAME"
fi

#### Check if Telegram-cli is blocked ####
NEWPID=$(pgrep -u "$USER" -x telegram-cli)
if [[ -f "$OLDPID" ]]; then
	[[ "$(cat $OLDPID)" == "$NEWPID" ]] && eval "$0 --stop"
else
	echo "0" > "$OLDPID" 
fi
[[ "${#NEWPID}" != "0" ]] && echo "$NEWPID" > "$OLDPID"
#### END ####

send_text(){
	[[ "$DEBUG" == "1" ]] && telegram-cli -WDe "send_text $1 $2" 
	telegram-cli -WDe "send_text $1 $2" >> /dev/null 2>&1
} # send_text (FILE)

send_msg(){
  # da usare send_msg "quello che devo scrivere"
	telegram-cli -WDe "msg $1 $2" >> /dev/null 2>&1
} # send_msg (simple msg )

send_photo(){
	telegram-cli -WDe "send_photo $1 $2"
}

inthelp(){
	touch "$BUFFER"
	cat > "$BUFFER" << EOF
Da ${BOTNICK:-BetaBot}
Messaggio di help per $2: 
Comandi accettati: 
--ping -> risponde PONG
--help -> stampa questo Messaggio
--blasfem -> ritorna una bestemmia
--suca -> tua zia
--hello -> saluta educatamente
--somma <m> <n> -> somma m e n
--sottrai <m> <n> -> sottrae m e n
--moltiplica <m> <n> -> moltiplica m e n
--dividi <m> <n> -> divide m e n
--cacca -> invia una simpatica immagine
--info -> stampa informazioni su questo bot
--host <sito> -> stampa IP del sito
--google <str da cercare> -> cerca su google
--meteo <location> -> meteo della tua citta\`
EOF
	send_text "$1" "$BUFFER"
	rm "$BUFFER"
}

botinfo(){
	touch "$BUFFER"
	cat > "$BUFFER" << EOF
Ciao $2:
Sono un bot malscritto in puro bash
mi chiamo ${BOTNICK:-BetaBot} (versione $VERS).
Puoi trovare il mio sorgente su github:
$SOURCE
EOF
	send_text "$1" "$BUFFER"
	rm "$BUFFER"
}

#isGroup(){
#	# use: isGroup raw string n
#	echo "$1"|sed -r 's/>>>.*//g;s/.*35\;1m|\[0m.*|\^\[//g;s/\ /\_/g'
#}

str_parser (){
	TEMPSTR=$(cat -A "$1" | head -n"$2"| tail -n1| sed -r 's/>>>.*//;s/\^\[\[0\;31m\^\[\[0m\^\[\[|.{6}$|\^\[\[0m\_\^\[\[0\;31m\^\[\[1\;31m|\^\[\[0m\_\^\[\[35\;1m|.*\]_/\ /g')
	NICK=$(echo "$TEMPSTR" | awk '{print $1}' )
	if [[ "$(echo "$TEMPSTR" | wc -w)" == "2" ]]; then
		NICK2=$(echo "$TEMPSTR" | awk '{print $2}' | sed 's/\_/\ /g')
	else
		NICK2=$(echo "$NICK" | sed 's/\_/\ /g' )		
	fi
	STRCLEAN=$(cat -A "$1" | head -n"$2" | tail -n1 | sed -r 's/.*>>>\_|.{6}$//g;s/\_/\ /g')	
	unset -v TEMPSTR
}


jesus(){
	SOUR="https://dl.dropboxusercontent.com/u/51889882/blasfem/blasfemy.txt"
	ALL=$(curl -s $SOUR)
	N=$(echo $ALL | wc -w)
	echo $ALL | cut -d' ' -f$(shuf -i 1-$N -n 1) | sed -e 's/\_/\ /g'
	unset -v N
}

is_integer() {
  if [[ "$1" =~ ^[0-9]+$ ]]; then
    echo 1;
  else
    echo 0;
  fi
}

calc () {
	awk "BEGIN { print $* ; }"
}

op (){
	N1=$(echo "$1"|awk '{print $(NF-1)}')
	N2=$(echo "$1"|awk '{print $(NF)}')
	if [[ "$(is_integer $(echo "$N2"|sed -r 's/\.//'))" == "1" ]] && 
		 [[ "$(is_integer $(echo "$N1"|sed -r 's/\.//'))" == "1" ]]; then
		calc  "$N1" "$2" "$N2" 
	else
		echo "Bad expression, n00b!"
	fi
	unset -v N1
	unset -v N2
}

if [[ -f "$LCK" ]]; then
	exit 1 # se esiste il file $LCK non eseguo niente
else
	touch "$LCK" # creo il file $LCK
	# while in ascolto
	while true; do
#		TELEG_OUT=$(telegram-cli -e "safe_quit" | grep -i '>>> \|»»» ' | sed 's/\»/\>/g;s/.*]\ \ //g;s/\[\[0m\$/\\n/g')
	telegram-cli -e "safe_quit" | grep -i '>>> \|»»» ' | sed 's/\ /\_/g'  > "$TELEG_OUT"

#		[[ "$DEBUG" == "1" ]] && [[ "${#TELEG_OUT}" != "0" ]]  && echo -e ">> <DEBUG> $TELEG_OUT"  
#		NUM=$(echo -e "$TELEG_OUT"| wc -l)  # numero di messaggi in input
		NUM=$(cat -A "$TELEG_OUT" | wc -l)

#		[[ "${#TELEG_OUT}" == "0" ]] && NUM=0
		[[ "$DEBUG" == "1" ]] && echo "$NUM"
		for i in $(seq 1 "$NUM"); do
			str_parser "$TELEG_OUT" "$i" # return NICK, NICK2, STRCLEAN
#			STRRAW=$(echo -e "$TELEG_OUT"|head -n"$i"|tail -n1)
#			STRCLEAN=$(echo "$STRRAW"|sed -r 's/.*>>>\ |\\n|.{4}$.*//g')
#			[[ "$DEBUG" == "1" ]] && echo -e "STRRAW: $STRRAW\nSTRCLEAN: $STRCLEAN"
			NEWCOMMAND=$(echo "$STRCLEAN" | cut -d' ' -f1)
#			NICK=$(isGroup "$STRRAW")
#			[[ "$NICK" == "(null)" ]] && break # e` un errore molto occasionale di telegram-cli
#			if [[ "${#NICK}" == "0" ]]; then
#				echo $STRRAW
#				NICK2=$(echo "$STRRAW"|sed -r 's/>>>.*|.*\[\[1\;31m|\^\[\[0\;31m\^\[\[0m\^\[\[34\;1m.*//g')
#				NICK=$(echo "$NICK2" | sed 's/\ /\_/g' )
#			else
#				NICK2=$(echo "$STRRAW"|sed -r 's/.*\[1\;31m|\[0\;31m.*//g;s/\^\[//g')
#			fi
			# cerca parole in tutta la stringa parsata
			for word in $(echo $STRCLEAN); do
					[[ "$word" == "M-pM-^_M-^RM-^Z" ]] && send_msg "$NICK" "<3"
					[[ "$(echo $word | sed -r 's/\,|\.|\!//g')" == "top" ]] && send_msg "$NICK" "Solo Top"
					[[ "$word" == "Pinpin" ]] && send_msg "$NICK" "Sono io $BOTNICK *_*"
					[[ "$word" == "D:" ]] && send_msg "$NICK" "Don't be sad $NICK2! :)"
					[[ "$word" == ":(" ]] && send_msg "$NICK" "Don't be sad $NICK2! :)"
					[[ "$DEBUG" == "1" ]] && echo -n "$word "
			done
			[[ "$DEBUG" == "1" ]] && echo 
			if [[ "$NEWCOMMAND" == "Pi" ]] || [[ "$NEWCOMMAND" == "pi" ]]; then
				#COMMAND=$(echo $STRCLEAN | sed -r 's/.*\-|\ .*//g')
				COMMAND=$(echo "$STRCLEAN" | cut -d ' ' -f2 | tr -d '-')
				echo -e "Channel: "$NICK"  - Command: "$COMMAND""
				case "$COMMAND" in
					'Pi'|'pi')
						true
						;;
					'ping'|'p')
						send_msg "$NICK" "PONG!"
						;;
					'blasfem')
						send_msg "$NICK" "$(jesus)"	
						;;
					'hello')
						send_msg "$NICK" "Ciao $NICK2"
						;;
					'somma')
						send_msg "$NICK" "$(op "$STRCLEAN" "+") "
						;;
					'sottrai')
						send_msg "$NICK" "$(op "$STRCLEAN" "-")"
						;;
					'dividi')
						send_msg "$NICK" "$(op "$STRCLEAN" "/")"
						;;
					'moltiplica')
						send_msg "$NICK" "$(op "$STRCLEAN" "*")"
						;;
					'random'|'rdm')
						send_msg "$NICK" "$RANDOM"
						;;
					'suca')
						send_msg "$NICK" "Tua zia!"
						;;
					'cacca')
						send_photo "$NICK" "$HOME/cacca.png"
						send_msg "$NICK" "Tutta per te $NICK2"
						;;
					'meteo')
						touch "$BUFFER"
						CITY=$(echo "$STRCLEAN" | awk '{print $NF}')           
						weatherman -x "$CITY, italy" > "$BUFFER"
						send_text "$NICK" "$BUFFER"
						rm "$BUFFER"
						unset -v CITY
						;;
					'rev')
						send_msg "$NICK" "$(echo "$STRCLEAN" | sed 's/.*\-rev//g' | rev)"
						;;
					'state')
						if [[ "$NICK" == "$ADMIN" ]]; then
							touch "$BUFFER"
							echo "RAM" >> "$BUFFER"
							free -h >> "$BUFFER"
							echo "Uptime" >> "$BUFFER"
							uptime >> "$BUFFER"
							echo "USER" >> "$BUFFER"
							echo "$USER" >> "$BUFFER"
							send_text "$NICK" "$BUFFER"
							rm "$BUFFER"
						else
							inthelp "$NICK" "$NICK2"
						fi
						;;
					'yaourt')
						send_msg "$NICK" "https://bugs.archlinux.org/task/36440"
						;;
					'info')
						botinfo "$NICK" "$NICK2"
						;;
					'google'|'g')
						GOOGLE="https://www.google.it/search?q="
						SEARCHSTR=$(echo "$STRCLEAN"|sed 's/.*\-g\ //g;s/\ /\+/g')
						send_msg "$NICK" "$GOOGLE$SEARCHSTR"
						unset -v GOOGLE
						unset -v SEARCHSTR
						;;
					'host')
						SITE=$(echo "$STRCLEAN"|awk '{print $NF}')
						IP=$(host "$SITE"|awk '/ has address /{print $NF}' |head -n1)
						send_msg "$NICK" "$NICK2: $SITE -> $IP"
						unset -v SITE
						unset -v IP
						;;
					'help'|'h')
						inthelp "$NICK" "$NICK2"
						;;
					*)
						send_msg "$NICK" "Comando sconosciuto. Dai un Pi --help."
						;;
				esac
				unset -v NICK
				unset -v NICK2
				unset -v STRCLEAN
				unset -v NEWCOMMAND
			fi
			if [[ "$DEBUG" == "0" ]]; then
				cat -A "$TELEG_OUT" >> "$HOME/TB_($(date +%F))_logs.log"
			else
				cat -A "$TELEG_OUT" >> ./parsami.log
			fi
			killall telegram-cli 2> /dev/null
		done
		sleep 2
	done
fi
